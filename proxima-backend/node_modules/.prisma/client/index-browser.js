
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  nom: 'nom',
  prenom: 'prenom',
  telephone: 'telephone',
  role: 'role',
  verified: 'verified',
  active: 'active',
  stripe_customer_id: 'stripe_customer_id',
  premium_until: 'premium_until',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LieuScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  description: 'description',
  type: 'type',
  adresse: 'adresse',
  ville: 'ville',
  code_postal: 'code_postal',
  latitude: 'latitude',
  longitude: 'longitude',
  superficie: 'superficie',
  accessibilite: 'accessibilite',
  equipements: 'equipements',
  restrictions: 'restrictions',
  prix_jour: 'prix_jour',
  caution: 'caution',
  disponible: 'disponible',
  instant_book: 'instant_book',
  images: 'images',
  video_url: 'video_url',
  proprietaire_id: 'proprietaire_id',
  statut: 'statut',
  verified: 'verified',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id: 'id',
  date_debut: 'date_debut',
  date_fin: 'date_fin',
  nb_jours: 'nb_jours',
  locataire_id: 'locataire_id',
  lieu_id: 'lieu_id',
  type_projet: 'type_projet',
  nb_personnes: 'nb_personnes',
  description: 'description',
  equipements_demandes: 'equipements_demandes',
  prix_total: 'prix_total',
  caution: 'caution',
  commission: 'commission',
  statut: 'statut',
  created_at: 'created_at',
  updated_at: 'updated_at',
  confirme_at: 'confirme_at',
  annule_at: 'annule_at'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  reservation_id: 'reservation_id',
  amount: 'amount',
  commission: 'commission',
  type: 'type',
  stripe_payment_intent_id: 'stripe_payment_intent_id',
  stripe_transfer_id: 'stripe_transfer_id',
  statut: 'statut',
  created_at: 'created_at',
  processed_at: 'processed_at'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  reservation_id: 'reservation_id',
  auteur_id: 'auteur_id',
  target_id: 'target_id',
  lieu_id: 'lieu_id',
  rating: 'rating',
  commentaire: 'commentaire',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  LOCATAIRE: 'LOCATAIRE',
  PROPRIO: 'PROPRIO',
  ADMIN: 'ADMIN'
};

exports.LieuType = exports.$Enums.LieuType = {
  INTERIEUR: 'INTERIEUR',
  EXTERIEUR: 'EXTERIEUR',
  HISTORIQUE: 'HISTORIQUE',
  MODERNE: 'MODERNE',
  NATUREL: 'NATUREL',
  URBAIN: 'URBAIN',
  STUDIO: 'STUDIO'
};

exports.LieuStatut = exports.$Enums.LieuStatut = {
  EN_ATTENTE: 'EN_ATTENTE',
  APPROUVE: 'APPROUVE',
  REJETE: 'REJETE',
  SUSPENDU: 'SUSPENDU'
};

exports.ReservationStatut = exports.$Enums.ReservationStatut = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED',
  IN_DISPUTE: 'IN_DISPUTE'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  ACOMPTE: 'ACOMPTE',
  SOLDE: 'SOLDE',
  CAUTION: 'CAUTION',
  REMBOURSEMENT: 'REMBOURSEMENT'
};

exports.PaymentStatut = exports.$Enums.PaymentStatut = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Lieu: 'Lieu',
  Reservation: 'Reservation',
  Payment: 'Payment',
  Review: 'Review'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
